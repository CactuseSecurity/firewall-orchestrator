
name: Build

on:
  workflow_dispatch:

  push:
    paths-ignore:
    - 'documentation/**'
    - 'design/**'

  pull_request:
    types: [ ready_for_review, review_requested ]
    paths-ignore:
    - 'documentation/**'
    - 'design/**'
    
jobs:        
  # test_puppeteer_pdf:
  #   name: Puppeteer test on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, ubuntu-20.04, ubuntu-22.04]
  #   steps:
    
      # env:
      #   RUNNING_ON_GITHUB_ACTIONS: ${{ env.RUNNING_ON_GITHUB }}
      
  test_ubuntu_latest:
    name: test build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04, ubuntu-22.04]
    steps:
    - name: Set environment variable
      run: echo "RUNNING_ON_GITHUB=1" >> $GITHUB_ENV      
    - uses: actions/checkout@v4   
    - name: do test install in case of merged pull request
      run: cd /home/runner/work/firewall-orchestrator/firewall-orchestrator && ansible-playbook -e force_install=true site.yml -K
      env:
        RUNNING_ON_GITHUB_ACTIONS: ${{ env.RUNNING_ON_GITHUB }}
    - name: Set environment variable
      run: echo "RUNNING_ON_GITHUB=1" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
    - name: exec dotnet test
      run: cd /home/runner/work/firewall-orchestrator/firewall-orchestrator/roles/tests-unit/files/FWO.Test && dotnet restore && dotnet build && dotnet test --filter "Name=HtmlToPdfTest"
