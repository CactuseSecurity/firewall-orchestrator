
  # install all upgrades between running version and version currently being installed
 
- set_fact: 
    installed_version: "{{ old_version }}"
    current_version: "{{ product_version }}"
    all_upgrades_available: "{{ lookup('fileglob', 'upgrade/*.yml') }}"
    upgrade_files: []

- name: set list of relevant upgrade files (without extension)
  set_fact:
    upgrade_files: "{{ upgrade_files + [ item | basename | splitext | first | regex_replace('([\\d\\.]+)\\.yml', '\\1') ] }}"
  when: |
    item | basename | splitext | first | regex_replace('([\\d\\.]+)\\.yml', '\\1') is version(installed_version, '>=') 
    and 
    item | basename | splitext | first | regex_replace('([\\d\\.]+)\\.yml', '\\1') is version(current_version, '<=')
  with_fileglob:
    - "upgrade/*.yml"

- debug: 
    msg:
      - "installed_version: {{ installed_version }}"
      - "current_version: {{ current_version }}"
      - "all_upgrades_available: {{ all_upgrades_available }}"

- name: install upgrades
  include_tasks: upgrade/{{ item }}.yml
  loop: "{{ upgrade_files | sort }}"
