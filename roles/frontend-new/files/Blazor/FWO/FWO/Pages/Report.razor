@using BlazorTable

@page "/report"

<h3>Test-Report</h3>

<button class="btn btn-primary m-2" @onclick="UpdateHeading">Generate Report</button>

<div class="m-2">
    <input type="text" class="form-control" placeholder="Filter" />
</div>

<div class="card m-2">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h4 class="d-inline-flex align-items-center">
            Filter
            <button class="btn btn-dark btn-sm ml-3 oi @FilterButtonCollapse" @onclick="CollapseButtonClicked"></button>
        </h4>
        <h4 class="btn-group">
            <button class="btn btn-success btn-sm">Add</button>
            <button class="btn btn-danger btn-sm">Remove</button>
        </h4>
    </div>
    <div class="collapse card-body @FilterCollapseCSS">
        <div class="m-2 d-flex flex-wrap">
            @for (int i = 0; i < 100; i++)
            {
                <Filter Title="@("title" + i)"></Filter>
            }
        </div>
    </div>
</div>

<div class="card m-2 shadow">
    <div class="card-body">
        <Table TableItem="Rule" Items="Rules" ShowSearchBar="true" PageSize="47">
            <Column TableItem="Rule" Title="ID" Field="@(x => x.ID)" Sortable="true" Filterable="false" Width="15%" />
            <Column TableItem="Rule" Title="Name" Field="@(x => x.Name)" Sortable="true" Filterable="false" Width="10%" />
            <Column TableItem="Rule" Title="IP" Field="@(x => x.IP)" Sortable="true" Filterable="false" Width="10%" />
            <Pager ShowPageNumber="true"></Pager>
        </Table>
    </div>
</div>



@code
{
    string FilterCollapseCSS = "show";
    string FilterButtonCollapse = "oi-minus";

    [Parameter]
    public System.Data.DataTable Table { get; set; }

    private Rule[] Rules = new Rule[10]
    {
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"},
        new Rule { ID = 1, Name = "Test", IP="10.10.10.9"}
    };

    protected override async Task OnInitializedAsync()
    {
        Table = new System.Data.DataTable("a");
    }

    private async void UpdateHeading(MouseEventArgs e)
    {
        APIConnection Test = new APIConnection();
        string QueryResult = await Test.TestQuery();
        Table = JsonReader.ReadString(QueryResult).Tables[0];
    }

    private void CollapseButtonClicked(MouseEventArgs e)
    {
        FilterCollapseCSS = (FilterCollapseCSS == "") ? "show" : "";
        FilterButtonCollapse = (FilterButtonCollapse == "oi-plus") ? "oi-minus" : "oi-plus";
    }

    class Rule
    {
        public string Name { get; set; }
        public int ID { get; set; }
        public string IP { get; set; }
    }
}
