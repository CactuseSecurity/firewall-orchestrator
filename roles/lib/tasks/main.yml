
- block:

    - name: initialize handler for datarecovery
      set_fact:
        lib_handler_guard: start
      changed_when: true
      notify:
      - lib handler
      when: installation_mode == "upgrade"

    - name: check for lib dir
      stat:
        path: "{{ fworch_home }}/lib"
      register: lib_dir_check

    - name: backup lib dir
      synchronize:
        src: "{{ fworch_home }}/lib"
        dest: "{{ fworch_home }}/backup_lib"
      delegate_to: "{{ inventory_hostname }}"
      when: lib_dir_check.stat.exists and installation_mode == "upgrade"

    - name: remove lib dir
      file:
        state: absent
        path: "{{ fworch_home }}/lib"


    - name: create {{ lib_tmp_dir }} including lib dir
      file:
        dest: "{{ lib_tmp_dir }}"
        state: directory
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"

    - name: install dotnet needed for both ui and middleware servers
      include_tasks: install_dot_net.yml

    - name: install wkhtml pdf library needed for both ui and middleware servers
      include_tasks: install_wkhtml_pdf.yml

    - name: copy {{ product_name }} dotnet lib files to lib target
      copy:
        src: "{{ item }}"
        dest: "{{ lib_dir }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"
      loop:
        - FWO.Api.Client
        - FWO.Middleware
        - FWO.Middleware.Client
        - FWO.Logging
        - FWO.Config.Api
        - FWO.Config.File
        - FWO.Report
        - FWO.Report.Filter
        - FWO.DeviceAutoDiscovery

    - name: finalize handler for datarecovery
      set_fact:
        lib_handler_guard: stop
      changed_when: true
      notify: "lib handler"
      when: installation_mode == "upgrade"

    - name: mark lib role as "has already run"
      set_fact:
        lib_role_has_run: true

  become: yes
  when: not lib_role_has_run|bool
  # make sure lib role is only run once per host to save time
