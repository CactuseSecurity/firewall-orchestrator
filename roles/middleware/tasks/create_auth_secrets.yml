- block:  
    - name: make sure secrets dir exists
      file:
        path: "{{ fworch_home }}/etc/secrets"
        state: directory
        mode: "0750"
        owner: "{{ fworch_user }}"
        group: "{{ postgres_group }}"

    - name: read ldap manager pwd from file
      slurp:
        src: "{{ ldap_manager_pwd_file }}"
      register: ldap_manager_secret_dict

    - name: decode ldap manager pwd
      set_fact:
        ldap_manager_pwd: "{{ ldap_manager_secret_dict['content'] | b64decode | trim }}"

    # we need the public key during api install
    # private key needed only on the middleware server, public key on ui & api

    # creates a .pem keyfile including both private and public key in base64
    - name: Generate JWT private key 
      openssl_privatekey:
        path: "{{ jwt_private_key_file }}"
        size: 2048
        force: true
        type: RSA
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"
        mode: "0600"
        backup: true
      become: true

    - name: Generate JWT public key in PEM format
      openssl_publickey:
        path: "{{ jwt_public_key_file }}"
        privatekey_path: "{{ jwt_private_key_file }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"
        mode: "0644"
      become: true

    - name: overwrite random private key with fixed test key
      copy:
        src: jwt_test_private_key.pem
        dest: "{{ jwt_private_key_file }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"
        mode: "0600"
      become: true
      when: testkeys | bool

    - name: overwrite random public key with fixed test key
      copy:
        src: jwt_test_public_key.pem
        dest: "{{ jwt_public_key_file }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"
        mode: "0644"
      become: true
      when: testkeys | bool

    - name: create {{ openldap_readonly_user_name }} password
      set_fact:
        ldap_inspector_pw: "{{ randomly_generated_pwd }}"
      when: installation_mode == "new"

    - name: create {{ openldap_writer_name }} password
      set_fact:
        ldap_writer_pw: "{{ randomly_generated_pwd }}"
      when: installation_mode == "new"
  become: true
