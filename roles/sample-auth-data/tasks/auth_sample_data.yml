- block:

  - name: insert tenant tenant1{{ sample_postfix }}
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN
          IF NOT EXISTS (SELECT tenant_id FROM tenant WHERE tenant_name='tenant1{{ sample_postfix }}') THEN
            insert into tenant (tenant_name, tenant_can_view_all_devices, tenant_is_superadmin) 
              values ('tenant1{{ sample_postfix }}', false, false); 
          END IF; 
        END $do$

  - name: add device mapping for tenant tenant1{{ sample_postfix }}
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN
          IF NOT EXISTS (SELECT * FROM tenant_to_device LEFT JOIN tenant USING (tenant_id) WHERE tenant_name='tenant1{{ sample_postfix }}') THEN 
            INSERT INTO tenant_to_device (tenant_id, device_id)
            SELECT tenant_id, (select dev_id FROM device where device.dev_name='{{ sample_fortigate_basename }}{{ sample_postfix }}') from tenant WHERE tenant.tenant_name='tenant1{{ sample_postfix }}'; 
          END IF; 
        END $do$

  - name: add management mapping for tenant tenant1{{ sample_postfix }}
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN
          IF NOT EXISTS (SELECT * FROM tenant_to_management LEFT JOIN tenant USING (tenant_id) WHERE tenant_name='tenant1{{ sample_postfix }}') THEN 
            INSERT INTO tenant_to_management (tenant_id, management_id, shared)
              SELECT 
                tenant_id, 
                (select mgm_id FROM management where management.mgm_name='{{ sample_fortigate_basename }}{{ sample_postfix }}'),
                TRUE
              FROM tenant WHERE tenant.tenant_name='tenant1{{ sample_postfix }}'; 
          END IF; 
        END $do$

  - name: insert tenant tenant2{{ sample_postfix }}
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN
          IF NOT EXISTS (SELECT tenant_id FROM tenant WHERE tenant_name='tenant2{{ sample_postfix }}') THEN
            insert into tenant (tenant_name, tenant_can_view_all_devices, tenant_is_superadmin) 
              values ('tenant2{{ sample_postfix }}', false, false); 
          END IF; 
        END $do$

  - name: add device mapping for tenant tenant2{{ sample_postfix }}
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN 
          IF NOT EXISTS 
            (SELECT * FROM tenant_to_device LEFT JOIN tenant USING (tenant_id) WHERE tenant_name='tenant2{{ sample_postfix }}') THEN 
            INSERT INTO tenant_to_device (tenant_id, device_id) 
          SELECT tenant_id, (select dev_id FROM device where device.dev_name='{{ sample_fortigate_basename }}{{ sample_postfix }}') from tenant WHERE tenant.tenant_name='tenant2{{ sample_postfix }}'; 
          END IF; 
        END $do$
    when: sample_role_purpose is not match('test')

  - name: add management mapping for tenant tenant2{{ sample_postfix }}
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN
          IF NOT EXISTS (SELECT * FROM tenant_to_management LEFT JOIN tenant USING (tenant_id) WHERE tenant_name='tenant2{{ sample_postfix }}') THEN 
            INSERT INTO tenant_to_management (tenant_id, management_id, shared)
              SELECT
                tenant_id, 
                (select mgm_id FROM management where management.mgm_name='{{ sample_fortigate_basename }}{{ sample_postfix }}'),
                FALSE
              FROM tenant WHERE tenant.tenant_name='tenant2{{ sample_postfix }}'; 
          END IF; 
        END $do$

  - name: insert demo tenant network data 
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: >
        DO $do$ BEGIN
            IF EXISTS (SELECT tenant_id FROM tenant WHERE tenant_name='tenant1_demo') THEN
                IF NOT EXISTS (SELECT * FROM tenant_network LEFT JOIN tenant USING (tenant_id) WHERE tenant_name='tenant1_demo' and tenant_net_ip='10.10.0.0/32' AND tenant_net_ip_end='10.10.255.255/32') THEN
                    insert into tenant_network (tenant_id, tenant_net_ip, tenant_net_ip_end, tenant_net_comment) 
                    VALUES ((SELECT tenant_id FROM tenant WHERE tenant_name='tenant1{{ sample_postfix }}'), '10.10.0.0/32', '10.10.255.255/32', 'demo network for tenant 1') ON CONFLICT DO NOTHING;
                END IF;
            END IF;
            IF EXISTS (SELECT tenant_id FROM tenant WHERE tenant_name='tenant2_demo') THEN
                IF NOT EXISTS (SELECT * FROM tenant_network LEFT JOIN tenant USING (tenant_id) WHERE tenant_name='tenant2_demo' and tenant_net_ip='10.0.0.48/32' and tenant_net_ip_end='10.0.0.55/32') THEN
                    insert into tenant_network (tenant_id, tenant_net_ip, tenant_net_ip_end, tenant_net_comment) 
                    VALUES ((SELECT tenant_id FROM tenant WHERE tenant_name='tenant2{{ sample_postfix }}'), '10.0.0.48/32', '10.0.0.55/32', 'demo network for tenant 2') ON CONFLICT DO NOTHING;
                END IF;
            END IF;
        END $do$ 

  become: true
  become_user: postgres
