# this playbook sets up some sample devices with configs to play around with

- name: change importer hostname when it is localhost
  set_fact:
    importer_hostname: "{{ hostvars[inventory_hostname].ansible_hostname }}"
  when: importer_hostname == 'localhost'

- name: default credential id = -1 (test)
  set_fact:
    credential_id: -1

- name: pick the correct credential id
  set_fact:
    credential_id: 0
  when: sample_role_purpose is not match('test')

- block: # demo & test

    - name: insert sample fortiOS management
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='{{ sample_fortigate_name }}') THEN 
          insert into management (dev_typ_id,mgm_name,import_credential_id,ssh_hostname,do_not_import,importer_hostname) 
          VALUES (24,'{{ sample_fortigate_name }}',{{ credential_id }},'{{ demo_fos_uri }}',false,'{{ importer_hostname }}'); 
          END IF; END $do$ 

    - name: insert sample fortiOS gateway
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='{{ sample_fortigate_name }}') THEN
          insert into device (mgm_id,dev_name,local_rulebase_name,dev_typ_id)
          VALUES ((select mgm_id from management where mgm_name='{{ sample_fortigate_name }}'),'{{ sample_fortigate_name }}','access_rules',25); 
          END IF; END $do$ 

  become: true
  become_user: postgres


- block: # demo only
    - name: insert demo check point R81 management {{ sample_checkpoint_name }}
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
            IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='{{ sample_checkpoint_name }}') THEN 
              insert into management 
                (dev_typ_id,mgm_name,import_credential_id,ssh_hostname,do_not_import,importer_hostname) 
                VALUES (9,'{{ sample_checkpoint_name }}',{{ credential_id }},'{{ demo_cpr8x_uri }}',false,'{{ importer_hostname }}'); 
            END IF;
          END $do$ 

    - name: insert demo check point R81 gateway {{ sample_checkpoint_name }}
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='{{ demo_cpr8x_name }}') THEN
          insert into device (mgm_id,dev_name,local_rulebase_name,dev_typ_id,package_name)
          VALUES ((select mgm_id from management where mgm_name='{{ sample_checkpoint_name }}'),'{{ demo_cpr8x_name }}','AnonAAAB_Security_neu',9,'AnonAAAA_New'); 
          END IF; END $do$ 

  become: true
  become_user: postgres
  when: sample_role_purpose is not match('test')

- block: # testing only
    - name: insert test check point R8x management {{ sample_checkpoint_name }}
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='{{ sample_checkpoint_name }}') THEN 
          insert into management (dev_typ_id,mgm_name,import_credential_id,ssh_hostname,do_not_import,importer_hostname) 
          VALUES (9,'{{ sample_checkpoint_name }}',{{ credential_id }},'{{ sample_checkpoint_uri }}',false,'dummy importer hostname'); 
          END IF; END $do$ 

    - name: insert test check point R8x gateway {{ sample_checkpoint_name }}
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='{{ sample_checkpoint_name }}') THEN
          insert into device (mgm_id,dev_name,local_rulebase_name,dev_typ_id,package_name)
          VALUES ((select mgm_id from management where mgm_name='{{ sample_checkpoint_name }}'),'{{ sample_checkpoint_name }}','FirstLayer shared with inline layer',9,'TestPolicyWithLayers'); 
          END IF; END $do$ 

  become: true
  become_user: postgres
  when: sample_role_purpose is match('test')
