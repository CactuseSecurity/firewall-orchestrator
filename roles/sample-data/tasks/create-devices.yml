# this playbook sets up some sample devices with configs to play around with
# to be executed on the backend server (aka localhost) only which will work as demo data ssh server

- name: read ssh_priv_key into var
  slurp:
    src: "{{ sample_config_user_home }}/.ssh/id_rsa.{{ sample_config_user }}"
  register: sample_ssh_priv_key_dict
  become: yes

- name: decode key
  set_fact:
    sample_ssh_priv_key: "{{ sample_ssh_priv_key_dict['content'] | b64decode }}"

#  this assumes that we only use sample data for single machine installations and that the ansible_hostname is the real hostname
- set_fact: importer_hostname="{{ ansible_hostname }}" 

- block:

    - name: insert demo import credentials
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN
          IF NOT EXISTS (SELECT * FROM import_credential WHERE credential_name='credential01_demo') THEN 
          insert into import_credential
          (id,credential_name,username,secret,is_key_pair)
          VALUES (0,'credential01_demo','{{ sample_config_user }}','{{ sample_ssh_priv_key }}',true);
          END IF; END $do$ 

    - name: insert test fortinet management
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN
          IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='{{ sample_fortigate_name }}') THEN 
          insert into management 
          (dev_typ_id,mgm_name,import_credential_id,ssh_hostname,do_not_import,config_path,importer_hostname)
          VALUES (4,'{{ sample_fortigate_name }}',0,'{{ import_sample_server }}',false,'sample-configs/fortinet_demo/','{{ importer_hostname }}');
          END IF; END $do$ 

    - name: insert test fortinet gateway
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='{{ sample_fortigate_name }}') THEN 
          insert into device (mgm_id,dev_name,local_rulebase_name,dev_typ_id) 
          VALUES ((select mgm_id from management where mgm_name='{{ sample_fortigate_name }}'),'{{ sample_fortigate_name }}','{{ sample_fortigate_name }}',10);
          END IF; END $do$ 

    - name: insert test check point R7x management
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='checkpoint_demo') THEN 
          insert into management (dev_typ_id,mgm_name,import_credential_id,ssh_hostname,do_not_import,config_path,importer_hostname) 
          VALUES (7,'checkpoint_demo',0,'{{ import_sample_server }}',false, 'sample-configs/checkpoint_demo/','{{ importer_hostname }}'); 
          END IF; END $do$ 
      when: sample_role_purpose is not match('test')

    - name: insert test CPR7x gateway
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='checkpoint_demo') THEN
          insert into device (mgm_id,dev_name,local_rulebase_name,dev_typ_id)
          VALUES ((select mgm_id from management where mgm_name='checkpoint_demo'),'checkpoint_demo','IsoAAAA',7); 
          END IF; END $do$ 
      when: sample_role_purpose is not match('test')

    - name: insert test check point R8x management
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='{{ sample_checkpoint_name }}') THEN 
          insert into management (dev_typ_id,mgm_name,import_credential_id,ssh_hostname,do_not_import,importer_hostname) 
          VALUES (9,'{{ sample_checkpoint_name }}',0,'{{ import_sample_server }}',false,'{{ importer_hostname }}'); 
          END IF; END $do$ 
      when: sample_role_purpose is match('test')

    - name: insert test check point R8x gateway
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='{{ sample_checkpoint_name }}') THEN
          insert into device (mgm_id,dev_name,local_rulebase_name,dev_typ_id,package_name)
          VALUES ((select mgm_id from management where mgm_name='{{ sample_checkpoint_name }}'),'{{ sample_checkpoint_name }}','FirstLayer shared with inline layer',9,'TestPolicyWithLayers'); 
          END IF; END $do$ 
      when: sample_role_purpose is match('test')

  become: yes
  become_user: postgres
