# this playbook contains api tests

- name: test api version
  uri:
    url: https://{{ api_network_listening_ip_address }}:{{ api_web_port }}/api/v1/version
    method: GET
    headers:
      Content-Type: application/json
    body:
      query: ""
    body_format: json
    validate_certs: false
    return_content: true
  register: api_version
  changed_when: false
  failed_when: false

- name: api version test output
  debug:
    msg: "ERROR unexpected version test result (does not contain 'version'): {{ api_version.content }}"
  when: api_version.content is not search('version')

- name: test anonymous api access
  uri:
    url: https://{{ api_network_listening_ip_address }}:{{ api_web_port }}/api/v1/graphql
    method: POST
    headers:
      Content-Type: application/json
      x-hasura-role: anonymous
    body:
      query: "query { object(limit:3) {obj_name} }"
    body_format: json
    validate_certs: false
    return_content: true
  register: api_query_anonymous
  changed_when: false
  environment: "{{ proxy_env }}"

- name: anonymous api access output
  debug:
    msg: "ERROR unexpected version test result (does not contain 'Missing Authorization header'): {{ api_query_anonymous.content }}"
  when: >
    not 
      (
        api_query_anonymous.content is search('Missing\sAuthorization\sheader') 
        or
        api_query_anonymous.content is search('Missing ''Authorization'' or ''Cookie'' header')
      )

- name: get sample jwt
  uri:
    url: https://{{ middleware_hostname }}:{{ middleware_web_listener_port }}/api/AuthenticationToken/Get/
    method: POST
    headers:
      Content-Type: application/json
    body:
      Username: user1{{ test_postfix }}
      Password: "{{ test_user1_pw }}"
    body_format: json
    validate_certs: false
    return_content: true
  register: sample_JWT
  changed_when: false
  environment: "{{ proxy_env }}"

- name: test anonymous api access with JWT
  uri:
    url: https://{{ api_network_listening_ip_address }}:{{ api_web_port }}/api/v1/graphql
    method: POST
    headers:
      Content-Type: application/json
      # Remove leading and trailing text of jwt output
      Authorization: Bearer {{ sample_JWT.content }}
    body:
      query: "query text { txt(limit:3) { id } }"
    body_format: json
    validate_certs: false
    return_content: true
  register: api_query_anonymous_with_JWT
  changed_when: false
  environment: "{{ proxy_env }}"

- name: anonymous api access with JWT output
  debug:
    msg: "ERROR unexpected version test result (does not contain id): {{ api_query_anonymous_with_JWT.content }}"
  when: api_query_anonymous_with_JWT.content is not search('id')

# Todo: this only works if the hasura key is actually installed on the machine running the tests
- name: read hasura admin secret from file for tests
  slurp:
    src: "{{ fworch_secrets_dir }}/hasura_admin_pwd"
  register: api_hasura_admin_secret
  become: true

- name: decode hasura admin secret
  set_fact:
    api_hasura_admin_secret: "{{ api_hasura_admin_secret['content'] | b64decode | trim }}"

- name: test hasura-admin api access
  uri:
    url: https://{{ api_network_listening_ip_address }}:{{ api_web_port }}/api/v1/graphql
    method: POST
    headers:
      Content-Type: application/json
      x-hasura-role: admin
      x-hasura-admin-secret: "{{ api_hasura_admin_secret }}"
    body:
      query: "query { object (limit: 1) {obj_name} }"
    body_format: json
    validate_certs: false
    return_content: true
  register: api_query_admin
  changed_when: false
  environment: "{{ proxy_env }}"

- name: admin api access output
  debug:
    msg: "ERROR unexpected version test result (does not contain obj_name): {{ api_query_admin.content }}"
  when: api_query_admin.content is not search('obj_name')
