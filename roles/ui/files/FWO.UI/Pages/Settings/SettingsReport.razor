@using FWO.Api.Client
@using FWO.Config.Api
@using FWO.Config.Api.Data


@page "/settings/report"
@attribute [Authorize(Roles = $"{Roles.Admin}, {Roles.Reporter}, {Roles.ReporterViewAll}, {Roles.Recertifier}, {Roles.Auditor}, {Roles.FwAdmin}")]

@inject ApiConnection apiConnection
@inject UserConfig userConfig

<div class="input-group">
    <h3>@(userConfig.GetText("report_settings"))</h3>
    <HelpLink Page="settings/report"/>
</div>
@(userConfig.GetText("U5413"))
<hr />

@if (configData != null)
{
    <form onsubmit="return false">
        <div class="form-group row" data-toggle="tooltip" title="@(userConfig.PureLine("H5412"))">
            <label for="elementsPerFetch" class="col-form-label col-sm-4">@(userConfig.GetText("elementsPerFetch")):</label>
            <div class="col-sm-2">
                <input id="elementsPerFetch" type="number" min="0" class="form-control form-control-sm" @bind="configData!.ElementsPerFetch" />
            </div>
        </div>
        <div class="form-group row" data-toggle="tooltip" title="@(userConfig.PureLine("H5422"))">
            <label for="minCollapseAllDevices" class="col-form-label col-sm-4">@(userConfig.GetText("minCollapseAllDevices")):</label>
            <div class="col-sm-2">
                <input id="minCollapseAllDevices" type="number" min="0" class="form-control form-control-sm" @bind="configData!.MinCollapseAllDevices">
            </div>
        </div>
        @* <div class="form-group row">
            <label for="maxMessages" class="col-form-label col-sm-4">@(userConfig.GetText("maxMessages")):</label>
            <div class="col-sm-2">
                <input id="maxMessages" type="number" min="0" class="form-control form-control-sm w-100" @bind="configData!.MaxMessages">
            </div>
        </div> *@
        <div class="form-group row" data-toggle="tooltip" title="@(userConfig.PureLine("H5423"))">
            <label for="messageViewTime" class="col-form-label col-sm-4">@(userConfig.GetText("messageViewTime")):</label>
            <div class="col-sm-2">
                <input id="messageViewTime" type="number" min="0" class="form-control form-control-sm" @bind="configData!.MessageViewTime">
            </div>
        </div>
        <hr />
        <div class="form-group row" data-toggle="tooltip" title="@(userConfig.PureLine("H5447"))">
            <label for="unusedTolerance" class="col-form-label col-sm-4">@(userConfig.GetText("unusedTolerance")):</label>
            <div class="col-sm-2">
                <input id="unusedTolerance" type="number" min="0" class="form-control form-control-sm" @bind="configData!.UnusedTolerance" />
            </div>
        </div>
        <div class="form-group row" data-toggle="tooltip" title="@(userConfig.PureLine("H5448"))">
            <label for="creationTolerance" class="col-form-label col-sm-4">@(userConfig.GetText("creationTolerance")):</label>
            <div class="col-sm-2">
                <input id="creationTolerance" type="number" min="0" class="form-control form-control-sm" @bind="configData!.CreationTolerance" />
            </div>
        </div>
    </form>
    <hr />
    <button type="button" class="btn btn-sm btn-primary" @onclick="Save">@(userConfig.GetText("save"))</button>
}
else
{
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}



@code
{
    [CascadingParameter]
    Action<Exception?, string, string, bool> DisplayMessageInUi { get; set; } = DefaultInit.DoNothing;

    ConfigData? configData;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            configData = await userConfig.GetEditableConfig();
        }
        catch (Exception exception)
        {
            DisplayMessageInUi(exception, userConfig.GetText("report_settings"), userConfig.GetText("E5421"), false);
        }
    }

    private async Task Save()
    {
        try
        {
            if (configData != null)
            {
                await userConfig.WriteToDatabase(configData, apiConnection);
                DisplayMessageInUi(null, userConfig.GetText("report_settings"), userConfig.GetText("U5301"), false);             
            }
            else
            {
                throw new Exception("Data saved before loaded. This should be impossible.");
            }
        }
        catch (Exception exception)
        {
            DisplayMessageInUi(exception, userConfig.GetText("report_settings"), "", true);
        }
    }
}
