@using FWO.Data.Modelling
@using FWO.Ui.Display

@inject UserConfig userConfig

<Table TableClass="table table-bordered table-sm th-bg-secondary table-responsive overflow-auto sticky-header" TableItem="ModellingAppRole" Items="AppRoles">
    <Column TableItem="ModellingAppRole" Title="@(userConfig.GetText("id"))" Field="@(x => x.Id)" Sortable="true" Filterable="true"/>
    <Column TableItem="ModellingAppRole" Title="@(userConfig.GetText("name"))" Field="@(x => x.Name)" Sortable="true" Filterable="true">
        <Template>
            @(context.Display())
        </Template>
    </Column>
    <Column TableItem="ModellingAppRole" Title="@(userConfig.GetText("app_servers"))" Field="@(x => x.Id)" Sortable="false" Filterable="true">
        <Template>
            @((MarkupString)ListAppServers(ModellingAppServerWrapper.Resolve(context.AppServers).ToList(), ModellingAppServerWrapper.Resolve(context.SurplusAppServers).ToList()))
        </Template>
    </Column>
    <Pager ShowPageNumber="true" ShowTotalCount="true" />
</Table>


@code
{
    [Parameter]
    public List<ModellingAppRole> AppRoles { get; set; } = [];

    [Parameter]
    public bool DiffMode { get; set; } = false;


    private string ListAppServers(List<ModellingAppServer> appServers, List<ModellingAppServer> surplusAppServers)
    {
        if(DiffMode)
        {
            List<string> allAppServers = appServers.ConvertAll(a => DisplayAppServerWithDiff(a, CssClass(a))).ToList();
            allAppServers.AddRange(surplusAppServers.ConvertAll(a => DisplayAppServerWithDiff(a, "text-danger")));
            return string.Join(", ", allAppServers);
        }
        else
        {
            return string.Join(", ", appServers.ConvertAll(a => DisplayBase.DisplayIpWithName(ModellingAppServer.ToNetworkObject(a))));
        }
    }

    private string DisplayAppServerWithDiff(ModellingAppServer appServer, string cssClass)
    {
        return $"<span class=\"{cssClass}\" >{DisplayBase.DisplayIpWithName(ModellingAppServer.ToNetworkObject(appServer))}</span>";
    }

    private string CssClass(ModellingAppServer appServer)
    {
        if (appServer.NotImplemented)
        {
            return "text-success";
        }
        return "";
    }
}
