@using FWO.Config.Api
@using FWO.Api.Data

@inject UserConfig userConfig

<div class="p-3">
    <h5 class="text-left">@(userConfig.GetText("select_device"))</h5>
    <button class="btn btn-sm btn-secondary"
            @onclick="@((async () => {
                DeviceFilter.applyFullDeviceSelection(SelectAll);
                SelectAll = !SelectAll;
                await SelectAllChanged.InvokeAsync(SelectAll);
            }))">
        @(SelectAll ? selectAllText : clearAllText)
    </button>
    <br><br>

    @foreach (ManagementSelect management in DeviceFilter.Managements)
    {
        <Collapse Title="@(management.Name)" StartToggled="false" Style="@("primary")">
            @foreach (DeviceSelect device in management.Devices)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="@device.Id"
                            @bind="device.Selected"
                            @oninput="async () => {
                                device.Selected = !device.Selected;
                                if (DeviceFilter.areAllDevicesSelected())
                                    SelectAll = false;
                                if (!DeviceFilter.isAnyDeviceFilterSet())
                                    SelectAll = true;
                                await SelectAllChanged.InvokeAsync(SelectAll);
                            }" />
                    <label class="form-check-label" for="@device.Id">
                        @device.Name
                    </label>
                </div>
            }
        </Collapse>
    }
</div>

@code
{
    [Parameter]
    public string FilterInput { get; set; } = "";

    [Parameter]
    public EventCallback<string> FilterInputChanged { get; set; }

    [Parameter]
    public DeviceFilter DeviceFilter { get; set; } = new DeviceFilter();

    [Parameter]
    public bool SelectAll { get; set; } // state of the device select/clear all button

    [Parameter]
    public EventCallback<bool> SelectAllChanged { get; set; }

    private string selectAllText = "";
    private string clearAllText = "";

    protected override void OnInitialized()
    {
        selectAllText = userConfig.GetText("select_all");
        clearAllText = userConfig.GetText("clear_all");
    }
}
