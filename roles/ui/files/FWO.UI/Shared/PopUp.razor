@using FWO.Ui.Services

@if (Show)
{
    //The not *custom* popupsizes will be deprecated soon
    <div class="modal-backdrop popup-outer">
        <div class="modal-open" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered @(SizeClass())">
                <div class="modal-content custom-modal-popup">
                    <div class="modal-header justify-content-between">
                        <h5 class="modal-title">@Title</h5>
                        <button type="button" class="modern-close" @onclick="Close">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body popup-body m-2">
                        @Body
                    </div>
                    <hr>
                    <div class="modal-footer">
                        @Footer
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    [Parameter]
    public string Title { get; set; } = "EMPTY_TITLE";

    [Parameter]
    public RenderFragment? Body { get; set; }

    [Parameter]
    public RenderFragment? Footer { get; set; }

    [Parameter]
    public bool Show { get; set; } = false;

    [Parameter]
    public PopupSize Size { get; set; } = PopupSize.Small;

    [Parameter]
    public bool Scrollable { get; set; } = true;

    [Parameter]
    public Action OnClose { get; set; } = new Action(() => { });

    private string SizeClass()
    {
        switch (Size)
        {
            //The not *custom* popupsizes will be deprecated soon
            case PopupSize.FullScreen: return "modal-fullscreen";
            case PopupSize.XLarge: return "modal-xl popup";
            case PopupSize.Large: return "modal-lg popup";
            case PopupSize.Medium: return "popup";
            case PopupSize.Small: return "modal-sm popup modal-dialog-padding";
            case PopupSize.CustomFullScreen: return "custom-modal-fs modal-dialog-padding";
            case PopupSize.CustomXLarge: return "custom-modal-xl modal-dialog-padding";
            case PopupSize.CustomLarge: return "custom-modal-lg modal-dialog-padding";
            case PopupSize.CustomMedium: return "custom-modal-md modal-dialog-padding";
            case PopupSize.CustomSmall: return "custom-modal-sm modal-dialog-padding";
            default: return "custom-modal-sm modal-dialog-padding";
        };
    }

    private void Close()
    {
        Show = false;
        OnClose();
    }
}
