@using FWO.Data.Report
@using FWO.Report.Data
@typeparam TItem

<tr>
    <td style="" colspan="">
        <!-- GetColumnStyle() GetColumnSpan() -->
        @if(Node.Children.Any())
        {
            <button class="btn btn-sm btn-link p-0" @onclick="() => OnToggle(Node)">
                @if(Node.IsExpanded)
                {
                    <Radzen.Blazor.RadzenIcon Icon="arrow_drop_down"></Radzen.Blazor.RadzenIcon>
                }
                else
                {
                    <Radzen.Blazor.RadzenIcon Icon="arrow_right"></Radzen.Blazor.RadzenIcon>
                }
            </button>
        }
        else
        {
            <span style="display:inline-block;width:1.2rem"></span>
        }
        @CellTemplate(Node.Item)
    </td>
</tr>

@if(Node.IsExpanded)
{
    @foreach(var child in Node.Children)
    {
        <TreeTableRow TItem="TItem" Node="child" Level="Level + 1" CellTemplate="CellTemplate" OnToggle="OnToggle" />
    }
}

@code {
    [Parameter] 
    public TreeNode<TItem> Node { get; set; }

    [Parameter] 
    public int Level { get; set; }

    [Parameter] 
    public RenderFragment<TItem> CellTemplate { get; set; }

    [Parameter] 
    public Action<TreeNode<TItem>> OnToggle { get; set; }

    // private string GetColumnStyle()
    // {
    //     string color = "#ffff";
    //     string yellow = "#fbf3b5", gray = "#f0f1f3", lightBlue = "#bbe3fd";
    //     int rem = Level * 1;

    //     if(Node.Item is MyData)
    //     {
    //         MyData item = (MyData)Convert.ChangeType(Node.Item, typeof(MyData));

    //         switch (item.HeaderType)
    //         {
    //             case HeaderType.Section:
    //                 color = yellow;
    //                 break;
    //             case HeaderType.Rulebase:
    //                 color = gray;
    //                 rem -= 1;
    //                 break;
    //             default:
    //                 color = gray;
    //                 rem -= 1;
    //                 break;
    //         }
    //     }

        

    //     return $"padding-left:{rem}rem; background-color: {color}";
    // }

    // private string GetColumnSpan()
    // {
    //     if(Node.Item is MyData)
    //     {
    //         MyData item = (MyData)Convert.ChangeType(Node.Item, typeof(MyData));

    //         switch(item.HeaderType)
    //         {
    //             case HeaderType.Section:
    //                 return "4";
    //             default: 
    //                 return "1";
    //         }
    //     }

    //     return "1";
    // }
}
