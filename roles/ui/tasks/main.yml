
- block:
    - name: initialize handler for datarecovery
      set_fact:
        ui_handler_guard: start
      changed_when: true
      notify:
      - ui handler
      when: installation_mode == "upgrade"

    - name: check for ui dir
      stat:
        path: "{{ fworch_home }}/ui"
      register: ui_dir_check

    - name: backup ui dir
      synchronize:
        src: "{{ fworch_home }}/ui"
        dest: "{{ fworch_home }}/backup_ui"
      delegate_to: "{{ inventory_hostname }}"
      when: ui_dir_check.stat.exists and installation_mode == "upgrade"

    - name: remove ui dir
      file:
        state: absent
        path: "{{ fworch_home }}/ui"
      when: installation_mode == "upgrade"

    - name: install libs needed for pdf creator nuget packet HakanL/WkHtmlToPdf-DotNet
      package:
        name: "{{ item }}"
        state: present
      loop:
        - libgdiplus
        - libc6-dev
        - libjpeg62
        - fontconfig
        - xfonts-base
        - xfonts-75dpi
        - libssl-dev

    - block:
      - name: download wkhtmltox for ubuntu 22.04 only
        get_url:
          url: https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
          dest: "{{ fworch_home }}"
          force: yes
          mode: "0644"
          owner: "{{ fworch_user }}"
          group: "{{ fworch_group }}"
        environment: "{{ proxy_env }}"

      - name: install wkhtmltox for ubuntu 22.04 only
        command: dpkg -i {{ fworch_home }}/wkhtmltox_0.12.6.1-2.jammy_amd64.deb

      - name: remove wkhtmltox for ubuntu 22.04 only
        file:
          path: "{{ fworch_home }}/wkhtmltox_0.12.6.1-2.jammy_amd64.deb"
          state: absent
      when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] == '22.04'

    - name: create ui dir
      file:
        dest: "{{ ui_dir }}"
        state: directory
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"

    - name: copy ui files to frontend target
      copy:
        src: "{{ item }}"
        dest: "{{ ui_dir }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_group }}"
      loop:
        - FWO.UI

  become: yes

- include_tasks: ui_apache_install_and_setup.yml

- include_tasks: ui_install_dot_net.yml

- name: include upgrade script
  import_tasks: run-upgrades.yml
  when: "installation_mode == 'upgrade'"

- name: finalize handler for datarecovery
  set_fact:
    ui_handler_guard: stop
  changed_when: true
  notify: "ui handler"
  when: installation_mode == "upgrade"
