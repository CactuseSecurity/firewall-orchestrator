
- block:
    - name: Install webserver packages
      package: name={{ item }} state=present
      loop:
        - "{{ webserver_package_name }}"
        - "{{ wsgi_package_name }}"
      environment: "{{ proxy_env }}"

    - name: create apache certificates
      include_role:
        name: openssl-cert
      vars:
        openssl_cert_path: /etc/apache2/ssl
        openssl_user: root
        openssl_private_key: "{{ openssl_cert_path }}/server.key"
        openssl_csr: "{{ openssl_cert_path }}/server.csr"
        openssl_country: DE
        openssl_state: Hessen
        openssl_location: Frankfurt
        openssl_organization: Cactus eSecurity
        openssl_email_address: "fworch@cactus.de"
        openssl_cert: "{{ openssl_cert_path }}/server.crt"
      when: installation_mode == "new"

    - name: copy cert to /etc/ssl/certs/ to make it acceptable
      copy:
        src: "/etc/apache2/ssl/server.crt"
        dest: "/etc/ssl/certs/"
        remote_src: yes
      when: installation_mode == "new"

    - name: enable apache modules proxy proxy_http ssl
      apache2_module: state=present name={{ item }}
      loop:
        - rewrite
        - proxy
        - proxy_http
        - ssl
        - proxy_wstunnel

    - name: copy ui httpd config file to ui target
      template:
        src: "httpd.conf"
        dest: "{{ http_conf_dir }}/{{ product_name }}-ui.conf"
        owner: root
        group: root

    - name: disable apache2 default web site
      command: "a2dissite 000-default"
      ignore_errors: yes

    - name: enable {{ product_name }} web site
      command: "a2ensite {{ product_name }}-ui"
      register: testoutput

    - name: test
      debug:
        var: testoutput

    # # currently only necessary here if we are running on the same machine as API
    # - name: increase apache timeout to {{ apache_timeout }} seconds
    #   lineinfile:
    #     path: /etc/apache2/apache2.conf
    #     line: "Timeout {{ apache_timeout }}"

    - name: restart apache
      service:
       name: "{{ webserver_package_name }}"
       state: restarted     

  become: yes
  environment: "{{ proxy_env }}"
