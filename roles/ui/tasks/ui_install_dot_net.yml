- block:

    - set_fact: distribution_version="{{ ansible_facts['distribution_version'] }}"
      when: ansible_facts['distribution']|lower == 'ubuntu'

    - set_fact: distribution_version="{{ ansible_facts['distribution_version'] | regex_replace('\.\d$','') }}"
      when: ansible_facts['distribution']|lower == 'debian'

    - name: get package list from ms {{ dotnet_deb_name }}
      get_url:
        url: "https://packages.microsoft.com/config/{{ ansible_facts['distribution']|lower }}/{{ distribution_version }}/{{ dotnet_deb_name }}"
        dest: "{{ ui_dir }}/{{ dotnet_deb_name }}"
        mode: "0644"

    - name: install ms package list
      apt:
        deb: "{{ ui_dir }}/{{ dotnet_deb_name }}"

    - name: remove package list file
      file:
        dest: "{{ ui_dir }}/{{ dotnet_deb_name }}"
        state: absent

    - name: apt update
      apt: update_cache=true

    - name: Install apt-transport-https
      package: name=apt-transport-https state=present

    - name: apt update
      apt: update_cache=true

    - name: Install dotnet-sdk-{{ dotnet_version }}
      package: "name=dotnet-sdk-{{ dotnet_version }} state=present"

    - name: copy blazor ui systemd service script
      template:
        src: fworch-blazor-ui.service.j2
        dest: "/lib/systemd/system/{{ ui_service_name }}.service"
        backup: yes
        mode: "0644"
        owner: "root"

  become: yes
  environment: "{{ proxy_env }}"

- name: publish blazor ui
  command: "dotnet publish -c {{ dotnet_mode }} -o {{ ui_start_dir }}/bin/{{ dotnet_mode }}/net{{ dotnet_version }} -p:PublishSingleFile=true -r linux-x64"
  # command: "dotnet publish -c {{ dotnet_mode }} -o {{ ui_start_dir }}/bin/{{ dotnet_mode }}/net{{ dotnet_version }}"
  args:
    chdir: "{{ ui_start_dir }}"
  become: yes
  become_user: "{{ fworch_user }}"
  environment: "{{ proxy_env }}"

- name: make blazor ui run at host startup
  systemd:
    name: "{{ ui_service_name }}"
    enabled: yes
  become: yes

- name: start blazor ui
  systemd:
    name: "{{ ui_service_name }}"
    state: restarted
    daemon_reload: yes
  become: yes
