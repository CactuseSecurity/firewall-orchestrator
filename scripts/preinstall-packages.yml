---

- name: Pre-Install packages to minimize installation time
  hosts: all
  become: yes
  tasks:

########## general packages ##################

    - name: install general packages
      package:
         name: "{{ item }}"
      loop:
        - git
        - ansible
        - rsyslog
        - "{{ webserver_package_name }}"
        - gnupg2
        - apt-transport-https
        - ca-certificates 
        - curl 
        - software-properties-common
        - npm
        - python3-pip
        - python3-virtualenv
        - python3-psycopg2
        - "{{ postgresql_c_client_library_header_files }}"
        - "{{ postgresql_package }}"
        - postgresql-client
        - git

########## ldap ##################

    - name: Install the openldap and required Packages
      package: 
        name: "{{ item }}"
        state: present 
      loop:
        - slapd
        - ldap-utils
        - openssl

########## docker for api ##################

    - name: adding docker apt signing key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        force: yes
        mode: "0644"
      environment: "{{ proxy_env }}"

    - name: add docker repo
      lineinfile:
        path: "/etc/apt/sources.list.d/docker.list"
        create: yes
        line: "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"

    - name: apt update
      apt: update_cache=true
      environment: "{{ proxy_env }}"

    - name: install docker specific packages from specific repo
      package:
         name: "{{ item }}"
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

########## dotnet ##################

    - set_fact: 
        distribution_version: "debian/11"
        when: ansible_facts['distribution']|lower == 'debian' and ansible_facts['distribution_version'] == '11'

    - set_fact: 
        distribution_version: "debian/10"
        when: ansible_facts['distribution']|lower == 'debian' and ansible_facts['distribution_version'] == '10'

    - set_fact: 
        distribution_version: "ubuntu/22.04"
        when: ansible_facts['distribution']|lower == 'ubuntu' and ansible_facts['distribution_version'] == '22.04'

    - set_fact: 
        distribution_version: "ubuntu/20.04"
        when: ansible_facts['distribution']|lower == 'ubuntu' and ansible_facts['distribution_version'] == '20.04'

    - set_fact: 
        distribution_version: "ubuntu/18.04"
        when: ansible_facts['distribution']|lower == 'ubuntu' and ansible_facts['distribution_version'] == '18.04'

    - name: get package list from ms 
      get_url:
        url: "https://packages.microsoft.com/config/{{ distribution_version }}/packages-microsoft-prod.deb"
        dest: "/tmp/packages-microsoft-prod.deb"
        mode: "0644"

    - name: install ms package list
      apt:
        deb: /tmp/packages-microsoft-prod.deb

    - name: remove package list file
      file:
        dest: "/tmp/packages-microsoft-prod.deb"
        state: absent

    - name: apt update
      apt: update_cache=true

    - name: Install dotnet-sdk-3.1
      package: "name=dotnet-sdk-3.1 state=present"
     
     
########## importer ##################

    - name: install importer packages
      package:
         name: "{{ item }}"
      loop:
        - libdbi-perl 
        - libdbd-pg-perl 
        - libdate-calc-perl 
        - psmisc 
        - libnet-cidr-perl 
        - libsys-syslog-perl 
        - libexpect-perl
        - libcgi-pm-perl

########## postgres dev/test ##################

    - name: find out installed postgres version
      script: "get_pg_version.sh"
      register: pg_version_result
      changed_when: false

    - name: set fact pg_version
      set_fact:
         pg_version: "{{ pg_version_result.stdout }}"      

    - set_fact:
        postgresql_dev_package: "{{ postgresql_dev_package_prefix }}-{{ pg_version }}"

    - name: install pg_dev packages
      package:
         name: "{{ item }}"
      loop:
        - make
        - "{{ postgresql_dev_package }}"
        - "{{ postgresql_test_package }}"
        